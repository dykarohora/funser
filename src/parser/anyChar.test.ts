import { anyChar } from './anyChar.js'

describe('anyChar', () => {
	it('ÂÖ•Âäõ„ÅåÁ©∫ÊñáÂ≠ó„ÅÆ„Å®„Åç„ÅØ„ÄÅ„Éë„Éº„Çπ„Å´Â§±Êïó„Åô„Çã', () => {
		const input = ''
		const output = anyChar({ input })

		expect(output.type).toEqual('Failure')
	})

	it('ÂÖ•Âäõ„Åå"a"„ÅÆ„Å®„Åç„ÅØ„ÄÅ„Éë„Éº„Çπ„Å´ÊàêÂäü„ÅóÁµêÊûú„Å®„Åó„Å¶"a"„ÇíÂèñÂæó„Åß„Åç„Çã', () => {
		const input = 'a'
		const output = anyChar({ input })

		if (output.type === 'Failure') {
			throw new Error('test failed')
		}

		expect(output.value).toEqual('a')
		expect(output.state.position).toEqual(1)
	})

	it('ÂÖ•Âäõ„Åå"ab"„ÅÆ„Å®„Åç„ÅØ„ÄÅ„Éë„Éº„Çπ„Å´ÊàêÂäü„ÅóÁµêÊûú„Å®„Åó„Å¶"a"„ÇíÂèñÂæó„Åß„Åç„Çã', () => {
		const input = 'ab'
		const output = anyChar({ input })

		if (output.type === 'Failure') {
			throw new Error('test failed')
		}

		expect(output.value).toEqual('a')
		expect(output.state.position).toEqual(1)
	})

	it('ÂÖ•Âäõ„Åå"ab"„Åß„Éë„Éº„Çπ„ÅÆÈñãÂßã‰ΩçÁΩÆ„Åå1„ÅÆ„Å®„Åç„ÅØ„ÄÅ„Éë„Éº„Çπ„Å´ÊàêÂäü„ÅóÁµêÊûú„Å®„Åó„Å¶"b"„ÇíÂèñÂæó„Åß„Åç„Çã', () => {
		const input = 'ab'
		const output = anyChar({ input, position: 1 })

		if (output.type === 'Failure') {
			throw new Error('test failed')
		}

		expect(output.value).toEqual('b')
		expect(output.state.position).toEqual(2)
	})

	it('ÂÖ•Âäõ„Åå"üçé"„ÅÆ„Å®„Åç„ÄÅ„Éë„Éº„Çπ„Å´ÊàêÂäü„ÅóÁµêÊûú„Å®„Åó„Å¶„Çµ„É≠„Ç≤„Éº„Éà„Éö„Ç¢„ÅÆÂâçÂçäÈÉ®ÂàÜ„ÇíÂèñÂæó„Åß„Åç„Çã', () => {
		const input = 'üçé'
		const output = anyChar({ input })

		if (output.type === 'Failure') {
			throw new Error('test failed')
		}

		expect(output.value).toEqual(input[0])
		expect(output.value.charCodeAt(0)).toEqual(55356)
		expect(output.state.position).toEqual(1)

	})
})
